{% extends "base.html" %}

{% block title %}Dashboard{% endblock %}

{% block content %}
<div class="d-flex flex-column flex-md-row">
    <!-- Sidebar -->
    <div class="sidebar border-end bg-light p-3" style="min-width: 280px;">
        <h5 class="mb-3">Device Status</h5>
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <ul class="list-group list-group-flush">
                    <li class="list-group-item"><strong>Device:</strong> <code>{{ config.device_path }}</code></li>
                    <li class="list-group-item"><strong>Mount Point:</strong> <code>{{ config.mount_point }}</code></li>
                    <li class="list-group-item">
                        <strong>Mounted:</strong>
                        {% if is_mounted %}<span class="badge bg-success">Yes</span>{% else %}<span class="badge bg-danger">No</span>{% endif %}
                    </li>
                </ul>
            </div>
        </div>
        
        {% if not is_mounted %}
            <div class="card shadow-sm">
                <div class="card-header bg-success text-white"><h5 class="mb-0">Unlock Device</h5></div>
                <div class="card-body">
                    <form action="/unlock" method="POST">
                        <div class="mb-3">
                            <label for="luks_password" class="form-label">LUKS Password</label>
                            <input type="password" class="form-control" id="luks_password" name="luks_password" required>
                        </div>
                        <button type="submit" class="btn btn-success w-100">Unlock & Mount</button>
                    </form>
                </div>
            </div>
        {% else %}
            <div class="card shadow-sm">
                <div class="card-header bg-danger text-white"><h5 class="mb-0">Lock Device</h5></div>
                <div class="card-body text-center">
                    <form action="/lock" method="POST"><button type="submit" class="btn btn-danger w-100">Unmount & Lock</button></form>
                </div>
            </div>
        {% endif %}
    </div>

    <!-- Main Content -->
    <div class="main-content flex-grow-1 p-3">
        {% if is_mounted %}
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h2 class="h4">File Browser</h2>
            <div>
                <button class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#createFolderModal"><i class="bi bi-folder-plus"></i> New Folder</button>
                <div class="btn-group">
                    <button id="listViewBtn" class="btn btn-outline-secondary active"><i class="bi bi-list-ul"></i></button>
                    <button id="gridViewBtn" class="btn btn-outline-secondary"><i class="bi bi-grid-3x3-gap"></i></button>
                </div>
            </div>
        </div>
        
        <div class="card shadow-sm">
            <div class="card-header">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb mb-0">
                        <li class="breadcrumb-item"><a href="/">Root</a></li>
                        {% set path_segments = current_path | split(pat="/") %}{% set current_segment_path = "" %}
                        {% for segment in path_segments %}{% if segment %}
                            {% set current_segment_path = current_segment_path ~ segment ~ "/" %}
                            <li class="breadcrumb-item"><a href="/?path={{ current_segment_path | urlencode }}">{{ segment }}</a></li>
                        {% endif %}{% endfor %}
                    </ol>
                </nav>
            </div>
            <div class="card-body file-container" id="fileContainer">
                {% if files %}
                    <div class="row row-cols-1 g-2" id="file-list-view">
                        {% for item in files %}
                        <div class="col file-item" data-name="{{ item.name }}" data-path="{{ item.relative_path | urlencode }}" data-is-dir="{{ item.is_dir }}">
                            <div class="d-flex align-items-center p-2 border rounded">
                                <div class="flex-shrink-0 me-3 fs-4">
                                    {% if item.is_dir %}<i class="bi bi-folder-fill text-primary"></i>{% else %}<i class="bi bi-file-earmark"></i>{% endif %}
                                </div>
                                <div class="flex-grow-1">
                                    {% if item.is_dir %}
                                        <a href="/?path={{ item.relative_path | urlencode }}" class="text-decoration-none text-dark stretched-link">{{ item.name }}</a>
                                    {% else %}
                                        <span>{{ item.name }}</span>
                                    {% endif %}
                                </div>
                                {% if not item.is_dir %}
                                <div class="text-muted small me-3">{{ item.size }} bytes</div>
                                {% endif %}
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-light" type="button" data-bs-toggle="dropdown" aria-expanded="false"><i class="bi bi-three-dots-vertical"></i></button>
                                    <ul class="dropdown-menu">
                                        {% if not item.is_dir %}
                                        <li><a class="dropdown-item preview-btn" href="#">Preview</a></li>
                                        <li><a class="dropdown-item download-btn" href="#">Download</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        {% endif %}
                                        <li><a class="dropdown-item rename-btn" href="#">Rename</a></li>
                                        <li><a class="dropdown-item delete-btn" href="#">Delete</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                {% else %}
                    <p class="text-muted">Directory is empty.</p>
                {% endif %}
            </div>
        </div>
        {% else %}
        <div class="text-center p-5">
            <h3 class="text-muted">Drive is Locked</h3>
            <p>Unlock the drive from the sidebar to view files.</p>
        </div>
        {% endif %}
    </div>
</div>

<!-- Modals -->
<div class="modal fade" id="createFolderModal" tabindex="-1"><div class="modal-dialog"><div class="modal-content">
    <form action="/create_folder" method="POST">
        <div class="modal-header"><h5 class="modal-title">Create New Folder</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
        <div class="modal-body">
            <input type="hidden" name="current_path" value="{{ current_path }}">
            <input type="text" name="folder_name" class="form-control" placeholder="Folder Name" required>
        </div>
        <div class="modal-footer"><button type="submit" class="btn btn-primary">Create</button></div>
    </form>
</div></div></div>

<div class="modal fade" id="renameModal" tabindex="-1"><div class="modal-dialog"><div class="modal-content">
    <form action="/rename" method="POST">
        <div class="modal-header"><h5 class="modal-title">Rename Item</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
        <div class="modal-body">
            <input type="hidden" name="current_path" value="{{ current_path }}">
            <input type="hidden" id="renameOldName" name="old_name">
            <input type="text" id="renameNewName" name="new_name" class="form-control" required>
        </div>
        <div class="modal-footer"><button type="submit" class="btn btn-primary">Rename</button></div>
    </form>
</div></div></div>

<div class="modal fade" id="deleteModal" tabindex="-1"><div class="modal-dialog"><div class="modal-content">
    <form action="/delete" method="POST">
        <div class="modal-header"><h5 class="modal-title">Confirm Delete</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
        <div class="modal-body">
            <input type="hidden" name="current_path" value="{{ current_path }}">
            <input type="hidden" id="deleteItemName" name="item_name">
            <p>Are you sure you want to delete <strong id="deleteItemNameDisplay"></strong>? This action cannot be undone.</p>
        </div>
        <div class="modal-footer"><button type="submit" class="btn btn-danger">Delete</button></div>
    </form>
</div></div></div>

<div class="modal fade" id="previewModal" tabindex="-1"><div class="modal-dialog modal-xl"><div class="modal-content">
    <div class="modal-header"><h5 class="modal-title" id="previewModalLabel">File Preview</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
    <div class="modal-body" id="previewModalBody" style="max-height: 80vh; overflow-y: auto;"></div>
</div></div></div>

<!-- Context Menu -->
<div id="contextMenu" class="dropdown-menu">
    <a class="dropdown-item preview-btn" href="#">Preview</a>
    <a class="dropdown-item download-btn" href="#">Download</a>
    <div class="dropdown-divider"></div>
    <a class="dropdown-item rename-btn" href="#">Rename</a>
    <a class="dropdown-item delete-btn" href="#">Delete</a>
</div>
{% endblock %}

{% block scripts %}
<script>
window.addEventListener('load', () => {
    // Modal instances
    const renameModal = new bootstrap.Modal(document.getElementById('renameModal'));
    const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
    const previewModal = new bootstrap.Modal(document.getElementById('previewModal'));

    // DOM elements
    const fileContainer = document.getElementById('fileContainer');
    const contextMenu = document.getElementById('contextMenu');

    // View toggle buttons
    const listViewBtn = document.getElementById('listViewBtn');
    const gridViewBtn = document.getElementById('gridViewBtn');
    const fileListView = document.getElementById('file-list-view');

    listViewBtn.addEventListener('click', () => {
        fileListView.classList.remove('row-cols-md-4');
        fileListView.classList.add('row-cols-1');
        listViewBtn.classList.add('active');
        gridViewBtn.classList.remove('active');
    });

    gridViewBtn.addEventListener('click', () => {
        fileListView.classList.remove('row-cols-1');
        fileListView.classList.add('row-cols-md-4');
        gridViewBtn.classList.add('active');
        listViewBtn.classList.remove('active');
    });

    // Context Menu Logic
    fileContainer.addEventListener('contextmenu', (e) => {
        const targetItem = e.target.closest('.file-item');
        if (!targetItem) return;
        
        e.preventDefault();
        contextMenu.style.top = `${e.pageY}px`;
        contextMenu.style.left = `${e.pageX}px`;
        contextMenu.classList.add('show');
        contextMenu.setAttribute('data-target-name', targetItem.dataset.name);
        contextMenu.setAttribute('data-target-path', targetItem.dataset.path);
        contextMenu.setAttribute('data-target-is-dir', targetItem.dataset.isDir);

        // Hide preview/download for directories
        const isDir = targetItem.dataset.isDir === 'true';
        contextMenu.querySelectorAll('.preview-btn, .download-btn, .dropdown-divider').forEach(el => {
            el.style.display = isDir ? 'none' : 'block';
        });
    });

    document.addEventListener('click', () => contextMenu.classList.remove('show'));

    // Event delegation for all action buttons (in list and context menu)
    document.body.addEventListener('click', async (e) => {
        const target = e.target;
        const itemElement = target.closest('.file-item') || document.querySelector(`[data-name='${contextMenu.dataset.targetName}']`);
        
        if (!itemElement && !contextMenu.classList.contains('show')) return;

        const itemName = itemElement ? itemElement.dataset.name : contextMenu.dataset.targetName;
        const itemPath = itemElement ? itemElement.dataset.path : contextMenu.dataset.targetPath;

        if (target.matches('.rename-btn')) {
            document.getElementById('renameOldName').value = itemName;
            document.getElementById('renameNewName').value = itemName;
            renameModal.show();
        } else if (target.matches('.delete-btn')) {
            document.getElementById('deleteItemName').value = itemName;
            document.getElementById('deleteItemNameDisplay').textContent = itemName;
            deleteModal.show();
        } else if (target.matches('.download-btn')) {
            window.location.href = `/download/${itemPath}`;
        } else if (target.matches('.preview-btn')) {
            const previewModalBody = document.getElementById('previewModalBody');
            const previewModalLabel = document.getElementById('previewModalLabel');
            const previewUrl = `/preview/${itemPath}`;

            previewModalLabel.textContent = `Preview: ${itemName}`;
            previewModalBody.innerHTML = '<div class="d-flex justify-content-center"><div class="spinner-border"></div></div>';
            previewModal.show();

            const response = await fetch(previewUrl);
            const contentType = response.headers.get('content-type');
            previewModalBody.innerHTML = '';

            if (contentType.startsWith('image/')) {
                const blob = await response.blob();
                const img = document.createElement('img');
                img.src = URL.createObjectURL(blob);
                img.style.maxWidth = '100%';
                previewModalBody.appendChild(img);
            } else if (contentType.startsWith('text/')) {
                const text = await response.text();
                const pre = document.createElement('pre');
                pre.textContent = text;
                previewModalBody.appendChild(pre);
            } else {
                previewModalBody.textContent = 'Preview not available for this file type.';
            }
        }
    });
});
</script>
<style>
.sidebar { position: sticky; top: 56px; height: calc(100vh - 56px); }
.file-item .dropdown { visibility: hidden; }
.file-item:hover .dropdown { visibility: visible; }
#contextMenu { position: absolute; z-index: 1050; }
</style>
{% endblock %}
